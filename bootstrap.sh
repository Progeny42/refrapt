#!/bin/bash

echo "Bootstrapping refrapt..."

# Look for the environment variable to configure the cron timer for the application
if [ -z ${CRON_SCHEDULE+x} ]; then 
    echo "CRON_SCHEDULE is unset!";
    return 1
else 
    echo "CRON_SCHEDULE is set to '$CRON_SCHEDULE'"; 
fi

# Create a log file purely for stdout capture
# It will be recreated at startup to ensure it does not grow too large
# The log file generated by the application is stored elsewhere, available for mounting to the host
mkdir -p /config/log/refrapt
rm -f /config/log/refrapt/refrapt.log
touch /config/log/refrapt/refrapt.log
chmod 666 /config/log/refrapt/refrapt.log

# Create a crontab job to run refrapt
echo "Installing cron file..."
echo "$CRON_SCHEDULE /opt/venv/bin/refrapt --conf /app/refrapt/refrapt.conf >> /config/log/refrapt/refrapt.log" > /etc/crontabs/abc

# Copy configuration file (if required)
CONTAINER_ALREADY_STARTED="/var/CONTAINER_ALREADY_STARTED_PLACEHOLDER"
if [ ! -e $CONTAINER_ALREADY_STARTED ]; then
    touch $CONTAINER_ALREADY_STARTED

    if ! test -f /app/refrapt/refrapt.conf; then
        # Setup configuration file
        cp /refrapt/refrapt.conf.example /app/refrapt/refrapt.conf
        echo "# The below paths are for Docker deployments, and should not be altered" >> /app/refrapt/refrapt.conf
        echo "set rootPath=\"/app/refrapt\"" >> /app/refrapt/refrapt.conf
        echo "set mirrorPath=\"/config/www\"" >> /app/refrapt/refrapt.conf
        echo "set skelPath=\"/app/refrapt/skel\"" >> /app/refrapt/refrapt.conf
        echo "set varPath=\"/app/refrapt/var\"" >> /app/refrapt/refrapt.conf

        echo "Configuration file has been created. Setup your configuration, and then restart the container for it to take effect."
    fi
fi

# Copy nginx site configuration file
cp /app/nginx/site-confs/default.conf /config/nginx/site-confs/default.conf
